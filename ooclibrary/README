Modern machine learning tasks in R may introduce great memory pressure, thus we may rely on out of core (OOC) computation to handle data set cannot be put inside physical memory. Some examples of existing R OOC packages are ff, bigmemory. But these packages basically requires algorithms to be rewritten to use there data structure and interface. This package focus on OOC solutions fully compatible with existing R codes, including binary extensions.

Under old_allocator is a mmap based allocation library to approximate the effect of bigmemory package without losing compatibility with exisiting R codes, through hacking memory map under vanilla R objects upon allocation. However, this does not achieve the same performance as bigmemory, since bigmemory use reference type where as R use value type. Moreover, the overhead introduced by mmap again make the performance worse.

Under new_allocator is a pure user space custom swap library, whose target is to solve the inefficiency mentioned in old_allocator library, by avoiding mmap based swapping and use direct IO for disk operation, and use non-LRU eviction policy like FIFO which may be more suitable for certain machine learning tasks. This work is inspired by Princenton SSDAlloc works.

To use these two libraries, type make under the sub folder to get *.so library file and supply through LD_PRELOAD='path to .so' when launching R instance, and inside the R instance, call

	library(ooclibrary)
	EnableMMapHooks() # enable custom allocation and swapping

	PrintMMapStatus() # print out current swap status

The new library parameters are set through environment variables MMAP_OBJECT_CACHE_SIZE (total memory usage) and MMAP_FOLDER (where swap file should be written). It also includes a builtin tracer which will dump out information of functions triggering page fault every 1 second. User should specify MMAP_TRACE_FILE (where the triggered information is written to) and MMAP_TRACE_SYMBOL_FILE (a temporary file for internal usage).
