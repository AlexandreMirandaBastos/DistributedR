// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp; 
// rcpparma_hello_world
arma::mat rcpparma_hello_world();
RcppExport SEXP HPdrecommend_rcpparma_hello_world() {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    __result = Rcpp::wrap(rcpparma_hello_world());
    return __result;
END_RCPP
}
// rcpparma_outerproduct
arma::mat rcpparma_outerproduct(const arma::colvec& x);
RcppExport SEXP HPdrecommend_rcpparma_outerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    __result = Rcpp::wrap(rcpparma_outerproduct(x));
    return __result;
END_RCPP
}
// rcpparma_innerproduct
double rcpparma_innerproduct(const arma::colvec& x);
RcppExport SEXP HPdrecommend_rcpparma_innerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    __result = Rcpp::wrap(rcpparma_innerproduct(x));
    return __result;
END_RCPP
}
// rcpparma_bothproducts
Rcpp::List rcpparma_bothproducts(const arma::colvec& x);
RcppExport SEXP HPdrecommend_rcpparma_bothproducts(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    __result = Rcpp::wrap(rcpparma_bothproducts(x));
    return __result;
END_RCPP
}
// computeFactors
arma::mat computeFactors(arma::mat& ls, const arma::mat& fs, const arma::sp_mat& sp_rs, double lambda, int numFactors);
RcppExport SEXP HPdrecommend_computeFactors(SEXP lsSEXP, SEXP fsSEXP, SEXP rsSEXP, SEXP lambdaSEXP, SEXP numFactorsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter<arma::mat& >::type ls(lsSEXP);
    Rcpp::traits::input_parameter<const arma::mat& >::type fs(fsSEXP);
    Rcpp::traits::input_parameter<const arma::sp_mat& >::type sp_rs(rsSEXP);
    Rcpp::traits::input_parameter<double>::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter<int>::type numFactors(numFactorsSEXP);
    __result = Rcpp::wrap(computeFactors(ls, fs, sp_rs, lambda, numFactors));
    return __result;
END_RCPP
}
// computeFactors_new
arma::mat computeFactors_new(arma::mat& ls, const arma::mat& fs, const arma::sp_mat& sp_rs, double lambda, int numFactors, const arma::vec& partInfo, int fsSplit);
RcppExport SEXP HPdrecommend_computeFactors_new(SEXP lsSEXP, SEXP fsSEXP, SEXP rsSEXP, SEXP lambdaSEXP, SEXP numFactorsSEXP, SEXP partInfoSEXP, SEXP fsSplitSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter<arma::mat& >::type ls(lsSEXP);
    Rcpp::traits::input_parameter<const arma::mat& >::type fs(fsSEXP);
    Rcpp::traits::input_parameter<const arma::sp_mat& >::type sp_rs(rsSEXP);
    Rcpp::traits::input_parameter<double>::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter<int>::type numFactors(numFactorsSEXP);
    Rcpp::traits::input_parameter<const arma::vec&>::type partInfo(partInfoSEXP);
    Rcpp::traits::input_parameter<int>::type fsSplit(fsSplitSEXP);
    __result = Rcpp::wrap(computeFactors_new(ls, fs, sp_rs, lambda, numFactors, partInfo, fsSplit));
    return __result;
END_RCPP
}
// test
double countNonzeros(arma::sp_mat& R);
RcppExport SEXP HPdrecommend_countNonzeros(SEXP RSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter<arma::sp_mat& >::type R(RSEXP);
    __result = Rcpp::wrap(countNonzeros(R));
	return __result;
END_RCPP
}
//gatherinfo
arma::vec gatherPartitionInfo(arma::mat& us, arma::sp_mat& sp_rs, int np);
RcppExport SEXP HPdrecommend_gatherPartitionInfo(SEXP usSEXP, SEXP rsSEXP, SEXP npSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter<arma::mat& >::type us(usSEXP);
    Rcpp::traits::input_parameter<arma::sp_mat& >::type sp_rs(rsSEXP);
    Rcpp::traits::input_parameter<int>::type np(npSEXP);
    __result = Rcpp::wrap(gatherPartitionInfo(us, sp_rs, np));
	return __result;
END_RCPP
}
